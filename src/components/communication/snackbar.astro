---
import IconButton from '../actions/icon-button.astro'
interface Props {
	action?: string | undefined,
	onclick?: string,
	href?: string | undefined,
	closable?: boolean,
	id?: string,
	className?: string,
	slot?: string,
	style?: string
}

const { action, onclick = '', href, closable = false, id = 'uniqueSnackbarIdentifier', className, slot, style } = Astro.props

export function snackbarOpen(delay: number, id: string = 'uniqueSnackbarIdentifier') {
	document.querySelector(`#${id}`)!.style.height = '48px'
	setTimeout(() => {
		document.querySelector(`#${id}`)!.style.opacity = '0%'
	}, delay)
}
// import: import {snackbarOpen} from "../components/communication/snackbar.astro";
---

<main class:list={['md-elevation-3', 'md-shape-corner-extra-small', closable && 'close', 'md-motion-easing-emphasized', 'md-motion-duration-medium2', className]} id={id} slot={slot} style={slot}>
	<p class="md-typescale-body-medium"><slot /></p>
	{action && <a class="md-typescale-label-large md-shape-corner-full" onclick={onclick} href={href}>{action}</a>}
	{closable && <IconButton onclick="document.querySelector('#uniqueSnackbarIdentifier').style.opacity = '0%'" color="var(--md-color-inverse-on-surface)">close</IconButton>}
</main>

<style>
	main {
        background: var(--md-color-inverse-surface);
        height: 0;
		padding: 0 8px 0 16px;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		gap: 8px;
        position: fixed;
		bottom: 25px;
        left: 25px;
        overflow: hidden;
	}

	main.close {
		padding: 0 12px 0 16px;
	}

	a {
        color: var(--md-color-inverse-primary);
        position: relative;
		overflow: hidden;
		padding: 5px 10px;
		cursor: pointer;
	}

	a:hover::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:  var(--md-color-inverse-primary);
        opacity: 0.08;
        overflow: hidden;
        border-radius: 100vh;
	}

	p {
		color: var(--md-color-inverse-on-surface);
	}
</style>