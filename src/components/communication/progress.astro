---
interface Props {
	indeterminate?: boolean,
	progress?: string,
	id?: string,
	className?: string,
	slot?: string,
	style?: string
}

const { indeterminate = false, progress = '0%', id, className, slot, style } = Astro.props

// to get the progress: parseInt(document.querySelector('#active')!.style.cssText.replace(/\D/g, ""))
// to change the progress: document.querySelector('#active')!.style = `--progress: 50%;`
---

<main id={id} class={className} style={style} slot={slot}>
	{indeterminate && <div class="track" class:list={['md-shape-corner-full', 'md-motion-easing-emphasized', 'md-motion-duration-long2', indeterminate && 'indeterminate']}></div>}
	<div id="active" class:list={['md-shape-corner-full', 'md-motion-easing-emphasized', 'md-motion-duration-long2']}></div>
	<div id="track" class:list={['md-shape-corner-full', 'md-motion-easing-emphasized', 'md-motion-duration-long2']}>
		{!indeterminate && <div id="stop" class="md-shape-corner-full"></div>}
	</div>
</main>

<style define:vars={{progress}}>
	@keyframes resize {
		from {
            width: 1%;
		}
		50% {
			width: calc(99% - var(--progress));
		}
		to {
			width: 1%;
		}
	}

    .indeterminate {
		animation: resize 2s cubic-bezier(0.2, 0, 0.8, 1) infinite;
    }

	main {
        width: 100%;
		display: flex;
		flex-direction: row;
        justify-content: center;
        align-items: center;
		padding: 0 4px;
		gap: 4px;
	}

	#active {
        width: var(--progress);
        height: 4px;
        background: var(--md-color-primary);
	}

	#track {
		flex-grow: 10;
        height: 4px;
        background: var(--md-color-secondary-container);
		display: flex;
		flex-direction: row;
        justify-content: end;
	}

	.track {
        height: 4px;
        background: var(--md-color-secondary-container);
        display: flex;
        flex-direction: row;
        justify-content: end;
	}

	#stop {
        width: 4px;
		height: 4px;
        background: var(--md-color-primary);
        position: absolute;
	}
</style>