---
interface props {
	type?: 'small' | 'large',
	number?: string,
	id?: string,
	className?: string,
	slot?: string,
	style?: string
}

const { type =  Astro.props.number ? 'large' : 'small', number, id, className, slot = 'badge', style } = Astro.props

let num
if (number) {
	if (parseInt(number) >= 1000) {
		num = '999+'
	} else {
		num = `${parseInt(number)}`
	}
}
---

<div class:list={['md-shape-corner-full', type, className]} slot={slot} id={id} style={style}>{type == 'large' && <p class="md-typescale-label-small">{num}</p>}</div>

<style>
	.md-typescale-label-small {
		font-size: 9pt !important;
	}

	div {
        background: var(--md-color-error);
        width: 6px;
        height: 6px;
        position: absolute;
        top: 0;
		right: 0;
	}

	div.large {
		width: fit-content;
		padding: 4px;
		display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 0;
		left: 18px;
	}

	p {
		color: var(--md-color-on-error);
        margin: 0;
        line-height: 100%;
	}
</style>