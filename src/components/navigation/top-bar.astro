---
interface Props {
	title: string,
	type?: 'center' | 'small' | 'medium' | 'large',
	id?: string,
	className?: string,
	slot?: string,
	style?: string
}

const { title, type = 'center', id, className, slot, style } = Astro.props

const decoder: any = {center: 'md-typescale-title-large', small: 'md-typescale-title-large', medium: 'md-typescale-headline-small', large: 'md-typescale-headline-medium'};
---

<div class:list={[type, 'container', className]} id={id} slot={slot} style={style}>
	<slot name="leading" />
    <p class:list={[decoder[type]]}>{title}</p>
	<div style="display: flex; flex-direction: row; justify-content: center; align-items: center;">
		<slot />
	</div>
</div>

<style>
	p {
		color: var(--md-color-on-surface);
	}

	.center {
        background: var(--md-color-surface);
        height: 64px;
		display: flex;
		flex-direction: row;
		align-items: center;
        justify-content: space-between;
        position: relative;
		padding: 0 16px;
	}

	.center p {
        width: 100%;
        text-align: center;
        position: absolute;
	}

    .small {
        background: var(--md-color-surface);
        height: 64px;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        position: relative;
        padding: 0 16px;
		gap: 16px;
    }

    .small p {
        width: 100%;
    }

    .medium {
        background: var(--md-color-surface);
        height: 112px;
        display: flex;
        flex-direction: row;
        align-items: start;
        justify-content: space-between;
        position: relative;
        padding: 16px;
		box-sizing: border-box;
        gap: 16px;
    }

    .medium p {
        width: 100%;
        margin: 0;
		order: -3;
		position: absolute;
		bottom: 20px;
		left: 20px;
    }

    .large {
        background: var(--md-color-surface);
        height: 152px;
        display: flex;
        flex-direction: row;
        align-items: start;
        justify-content: space-between;
        position: relative;
        padding: 20px 16px;
        box-sizing: border-box;
        gap: 16px;
    }

    .large p {
        width: 100%;
        margin: 0;
        order: -3;
        position: absolute;
        bottom: 28px;
        left: 24px;
    }

    .container::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:  var(--md-color-surface-tint);
        overflow: hidden;
		pointer-events: none;
    }
</style>