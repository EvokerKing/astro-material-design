---
import Icon from "../icon.astro";
import Badge from "../communication/badge.astro";
interface Props {
	json: string,
	selected: string,
	id?: string,
	className?: string,
	slot?: string,
	style?: string
}

const { json, selected, id, className, slot, style } = Astro.props
const list = JSON.parse(json)

if (list.length < 3 || list.length > 5) {
	throw new Error(`Expected 3-5 items in nav bar, found ${list.length}`)
}
---

<div class:list={["container md-elevation-2", className]} id={id} slot={slot} style={style}>
	{list.map((i: any, iter: number) => <div class="item" onclick={i[2]}>
		{iter == parseInt(selected) ?
				<div class="active md-shape-corner-full"><Icon>{i[1]}{i[3] && (i[3] == 'small' ? <Badge /> : <Badge number={i[3]} />)}</Icon></div> :
				<Icon>{i[1]}{i[3] && (i[3] == 'small' ? <Badge /> : <Badge number={i[3]} />)}</Icon>}
		<p class="md-typescale-label-medium">{i[0]}</p>
	</div>)}
</div>

<style>
	.active {
        background: var(--md-color-secondary-container);
        height: 32px;
        width: 64px;
        justify-content: center;
        align-items: center;
		display: flex;
	}

	.container {
        background: var(--md-color-surface-container);
        width: 100%;
		position: absolute;
		bottom: 0;
		left: 0;
		display: flex;
		flex-direction: row;
        align-items: center;
        justify-content: center;
		gap: 8px;
	}

    .container::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:  var(--md-color-surface-tint);
        overflow: hidden;
		pointer-events: none;
    }

	.item {
        width: 100%;
        height: 100%;
		display: flex;
		flex-direction: column;
        align-items: center;
        justify-content: center;
		cursor: pointer;
        padding: 12px 0 16px 0;
	}

	.md-typescale-label-medium {
		color: var(--md-color-on-surface-variant);
        margin: 4px 0 0 0;
        text-align: center;
	}

    .selected .md-typescale-label-medium {
        color: var(--md-color-on-surface);
    }
</style>