---
interface props {
	type?: 'standard' | 'modal',
    id?: string,
    className?: string,
    slot?: string,
    style?: string
}

const { type = 'standard', id, className, slot, style } = Astro.props
// to open: document.querySelector('.nav-drawer')!.style.width = '360px';	document.querySelector('.scrim')!.style.display = 'block'
---

<div id={id} slot={slot} style={style} class:list={["container", type == 'modal' && "md-elevation-1", "md-shape-corner-large-end", "md-motion-easing-emphasized", "md-motion-duration-medium4", "nav-drawer", type, className]}>
    <slot />
</div>
{type == 'modal' && <div class:list={['scrim']}></div>}

<script>
	document.querySelector('.scrim')!.addEventListener('click', () => {
		document.querySelector('.nav-drawer')!.style.width = '0'
		document.querySelector('.scrim')!.style.display = 'none'
	});
</script>

<style>
    .container {
        background: var(--md-color-surface);
        position: absolute;
        top: 0;
        left: 0;
        margin: auto;
        align-self: center;
        overflow: hidden;
        width: 360px;
        height: 100%;
        z-index: 1;
    }

    .container.modal {
        width: 0;
        background: var(--md-color-surface-container-low);
    }

    .container.modal::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:  var(--md-color-surface-tint);
        overflow: hidden;
        pointer-events: none;
    }

    .scrim {
        display: none;
    }

    .scrim::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background:  #0000000F;
        overflow: hidden;
    }
</style>